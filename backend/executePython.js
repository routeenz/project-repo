// executePython.js

const { exec } = require("child_process");
const fs = require("fs");
const path = require("path");
const { generateJobId } = require("./utils"); // Import generateJobId function from utils.js

const outputPath = path.join(__dirname, "outputs");

if (!fs.existsSync(outputPath)) {
  fs.mkdirSync(outputPath, { recursive: true });
}

const executePython = (code) => {
  const jobId = generateJobId(); // Generate a unique job ID for this Python code execution
  const filepath = path.join(outputPath, `${jobId}.py`);
  const outPath = path.join(outputPath, `${jobId}.txt`); // Output file path for Python output

  // Write the Python code to a temporary file
  fs.writeFileSync(filepath, code);

  return new Promise((resolve, reject) => {
    const command = `python "${filepath}" > "${outPath}"`;

    exec(command, (error, stdout, stderr) => {
      // Clean up: delete the temporary Python script file
      fs.unlinkSync(filepath);

      if (error) {
        reject({ error, stderr });
      } else {
        // Read the output file generated by the Python script
        fs.readFile(outPath, "utf8", (readErr, data) => {
          // Clean up: delete the output file
          fs.unlinkSync(outPath);

          if (readErr) {
            reject(readErr);
          } else {
            resolve(data);
          }
        });
      }
    });
  });
};

module.exports = {
  executePython,
};
